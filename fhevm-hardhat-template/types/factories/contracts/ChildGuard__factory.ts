/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ChildGuard,
  ChildGuardInterface,
} from "../../contracts/ChildGuard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ActionSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "supporter",
        type: "address",
      },
    ],
    name: "ActionSupported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
    ],
    name: "BadgeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
    ],
    name: "BadgeMintRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "BADGE1_TARGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BADGE2_TARGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BADGE3_TARGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBMIT_COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPPORT_DAILY_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badgeClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
    ],
    name: "claimBadge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "getAction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "submitter",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "descriptionHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "region",
            type: "string",
          },
          {
            internalType: "string",
            name: "date",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "euint32",
            name: "supportCountEnc",
            type: "bytes32",
          },
        ],
        internalType: "struct ChildGuard.ActionRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getActions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "submitter",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "descriptionHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "region",
            type: "string",
          },
          {
            internalType: "string",
            name: "date",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "euint32",
            name: "supportCountEnc",
            type: "bytes32",
          },
        ],
        internalType: "struct ChildGuard.ActionRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
    ],
    name: "isEligible",
    outputs: [
      {
        internalType: "bool",
        name: "eligible",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "progress",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastSubmitAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "descriptionHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "region",
        type: "string",
      },
      {
        internalType: "string",
        name: "date",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "supportCountEnc",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "regionCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "c",
        type: "address",
      },
    ],
    name: "setBadgeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "descriptionHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "region",
        type: "string",
      },
      {
        internalType: "string",
        name: "date",
        type: "string",
      },
    ],
    name: "submitAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "submitCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "incEnc",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "supportAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportGivenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportReceivedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportsPerDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRecords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupports",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018c6100b0604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6120b38061019b6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636731ff30116100de578063917975a111610097578063da1f12ab11610071578063da1f12ab146103b2578063ddf86e4b146103ba578063e5de8828146103cd578063eb8f43ef146103ed57600080fd5b8063917975a11461035a578063b6e7687314610362578063d80a84341461038257600080fd5b80636731ff30146102d45780636c69b27e146102dc5780636fedff14146102fc578063771164d41461030f5780638c2f4d94146101785780638d6d49251461032f57600080fd5b806333a14eeb1161013057806333a14eeb1461022657806334461067146102515780633bf8d8fa14610278578063409f6c631461029857806344803794146102a157806347d212da146102c157600080fd5b80630edb15a814610178578063125f8974146101935780631d74185c1461019c5780631f941648146101da57806323415135146101e3578063264f9003146101f8575b600080fd5b610180600a81565b6040519081526020015b60405180910390f35b610180600b5481565b6101ca6101aa366004611958565b600160209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161018a565b61018060025481565b6101f66101f1366004611984565b61040d565b005b6101ca610206366004611958565b600a60209081526000928352604080842090915290825290205460ff1681565b61018061023436600461199d565b600860209081526000928352604080842090915290825290205481565b61026461025f366004611984565b610632565b60405161018a989796959493929190611a17565b610180610286366004611a94565b60056020526000908152604090205481565b61018061025881565b6101806102af366004611a94565b60046020526000908152604090205481565b6101f66102cf366004611a94565b61089d565b610180603281565b6101806102ea366004611984565b60036020526000908152604090205481565b6101f661030a366004611b54565b61090d565b61032261031d366004611c14565b610b7c565b60405161018a9190611ce0565b600954610342906001600160a01b031681565b6040516001600160a01b03909116815260200161018a565b610180600181565b610375610370366004611984565b610f2c565b60405161018a9190611d45565b61039561039036600461199d565b61122a565b60408051931515845260208401929092529082015260600161018a565b612711610180565b6101f66103c8366004611d58565b6112c5565b6101806103db366004611a94565b60066020526000908152604090205481565b6101806103fb366004611a94565b60076020526000908152604090205481565b6009546001600160a01b031661045a5760405162461bcd60e51b815260206004820152600d60248201526c18985919d9481b9bdd081cd95d609a1b60448201526064015b60405180910390fd5b6000818152600a6020908152604080832033845290915290205460ff16156104b65760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610451565b60006104c2338361122a565b50509050806105025760405162461bcd60e51b815260206004820152600c60248201526b6e6f7420656c696769626c6560a01b6044820152606401610451565b60095460405133602482015260448101849052600160648201526000916001600160a01b03169060840160408051601f198184030181529181526020820180516001600160e01b0316630ab714fb60e11b179052516105619190611ddb565b6000604051808303816000865af19150503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105e25760405162461bcd60e51b815260206004820152600b60248201526a1b5a5b9d0819985a5b195960aa1b6044820152606401610451565b6000838152600a60209081526040808320338085529252808320805460ff191660011790555185927fbdaec09f93a9e010d98b043dd79efaaa052a0eed6b10c9ffe87c8f7e256da56f91a3505050565b60006020819052908152604090208054600182015460028301805492936001600160a01b039092169261066490611df7565b80601f016020809104026020016040519081016040528092919081815260200182805461069090611df7565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b5050505050908060030180546106f290611df7565b80601f016020809104026020016040519081016040528092919081815260200182805461071e90611df7565b801561076b5780601f106107405761010080835404028352916020019161076b565b820191906000526020600020905b81548152906001019060200180831161074e57829003601f168201915b50505050509080600401805461078090611df7565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac90611df7565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b50505050509080600501805461080e90611df7565b80601f016020809104026020016040519081016040528092919081815260200182805461083a90611df7565b80156108875780601f1061085c57610100808354040283529160200191610887565b820191906000526020600020905b81548152906001019060200180831161086a57829003601f168201915b5050505050908060060154908060070154905088565b6009546001600160a01b031615806108b457503332145b6108eb5760405162461bcd60e51b8152602060048201526008602482015267666f722064656d6f60c01b6044820152606401610451565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600760205260409020546102589061092b9042611e47565b101561096b5760405162461bcd60e51b815260206004820152600f60248201526e39bab136b4ba1031b7b7b63237bbb760891b6044820152606401610451565b336000908152600760205260408120429055600b8054829061098c90611e5a565b91829055509050600061099e8161156f565b60408051610100810182528481523360208083019182528284018b8152606084018b9052608084018a905260a084018990524260c085015260e084018690526000888152918290529390208251815590516001820180546001600160a01b0319166001600160a01b039092169190911790559151929350916002820190610a259082611ec2565b5060608201516003820190610a3a9082611ec2565b5060808201516004820190610a4f9082611ec2565b5060a08201516005820190610a649082611ec2565b5060c0820151600682015560e09091015160079182015560008381526020819052604090200154610a9490611582565b50600082815260208190526040902060070154610ab19033611592565b50604051829033907ff2a3918256e8cabe6f6b0eb6b22ce0f71b6c9e6ea03c0081ea19362ce4285c3f90600090a3600160036000868051906020012081526020019081526020016000206000828254610b0a9190611f81565b9091555050336000908152600460205260408120805460019290610b2f908490611f81565b90915550506009546001600160a01b031615610b745760405160019033907f5e9e873f367c553d8da82e77d1e65e3945eb078cdf69fe4479b07dcab91eff5f90600090a35b505050505050565b6060600b548310610bc0576040805160008082526020820190925290610bb8565b610ba56118eb565b815260200190600190039081610b9d5790505b509050610f26565b6000610bcc8385611f81565b9050600b54811115610bdd5750600b545b6000610be98583611e47565b905060008167ffffffffffffffff811115610c0657610c06611aaf565b604051908082528060200260200182016040528015610c3f57816020015b610c2c6118eb565b815260200190600190039081610c245790505b50905060005b82811015610f205760008082610c5c8a6001611f81565b610c669190611f81565b815260208082019290925260409081016000208151610100810183528154815260018201546001600160a01b0316938101939093526002810180549192840191610caf90611df7565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdb90611df7565b8015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b50505050508152602001600382018054610d4190611df7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6d90611df7565b8015610dba5780601f10610d8f57610100808354040283529160200191610dba565b820191906000526020600020905b815481529060010190602001808311610d9d57829003601f168201915b50505050508152602001600482018054610dd390611df7565b80601f0160208091040260200160405190810160405280929190818152602001828054610dff90611df7565b8015610e4c5780601f10610e2157610100808354040283529160200191610e4c565b820191906000526020600020905b815481529060010190602001808311610e2f57829003601f168201915b50505050508152602001600582018054610e6590611df7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9190611df7565b8015610ede5780601f10610eb357610100808354040283529160200191610ede565b820191906000526020600020905b815481529060010190602001808311610ec157829003601f168201915b5050505050815260200160068201548152602001600782015481525050828281518110610f0d57610f0d611f94565b6020908102919091010152600101610c45565b50925050505b92915050565b610f346118eb565b6000828152602081905260409020600101546001600160a01b0316610f8e5760405162461bcd60e51b815260206004820152601060248201526f149958dbdc99081b9bdd08199bdd5b9960821b6044820152606401610451565b600082815260208181526040918290208251610100810184528154815260018201546001600160a01b0316928101929092526002810180549293919291840191610fd790611df7565b80601f016020809104026020016040519081016040528092919081815260200182805461100390611df7565b80156110505780601f1061102557610100808354040283529160200191611050565b820191906000526020600020905b81548152906001019060200180831161103357829003601f168201915b5050505050815260200160038201805461106990611df7565b80601f016020809104026020016040519081016040528092919081815260200182805461109590611df7565b80156110e25780601f106110b7576101008083540402835291602001916110e2565b820191906000526020600020905b8154815290600101906020018083116110c557829003601f168201915b505050505081526020016004820180546110fb90611df7565b80601f016020809104026020016040519081016040528092919081815260200182805461112790611df7565b80156111745780601f1061114957610100808354040283529160200191611174565b820191906000526020600020905b81548152906001019060200180831161115757829003601f168201915b5050505050815260200160058201805461118d90611df7565b80601f01602080910402602001604051908101604052809291908181526020018280546111b990611df7565b80156112065780601f106111db57610100808354040283529160200191611206565b820191906000526020600020905b8154815290600101906020018083116111e957829003601f168201915b50505050508152602001600682015481526020016007820154815250509050919050565b600080600083600103611260575050506001600160a01b03821660009081526004602052604090205460018082101591906112be565b83600203611291575050506001600160a01b038216600090815260066020526040902054600a8082101591906112be565b836003036112be575050506001600160a01b038216600090815260056020526040902054600a8082101591905b9250925092565b600084815260208190526040902060018101546001600160a01b03166113205760405162461bcd60e51b815260206004820152601060248201526f149958dbdc99081b9bdd08199bdd5b9960821b6044820152606401610451565b600085815260016020908152604080832033845290915290205460ff161561137e5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481cdd5c1c1bdc9d1959607a1b6044820152606401610451565b600061138d6201518042611faa565b3360009081526008602090815260408083208484529091529020549091506032116113f05760405162461bcd60e51b815260206004820152601360248201527219185a5b1e481cdd5c1c1bdc9d081b1a5b5a5d606a1b6044820152606401610451565b60006114328686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506115a592505050565b90506114428360070154826115ba565b6007840181905561145290611582565b506007830154600184015461147091906001600160a01b0316611592565b5061147f836007015433611592565b5060008781526001602081815260408084203385528252808420805460ff1916841790556008825280842086855290915282208054919290916114c3908490611f81565b925050819055506001600260008282546114dd9190611f81565b9091555050336000908152600560205260408120805460019290611502908490611f81565b90915550506001838101546001600160a01b031660009081526006602052604081208054909190611534908490611f81565b9091555050604051339088907f630e5f5b881f23b2150daa405fee7683f53cee92b5e371392ca9b168cda9f0d790600090a350505050505050565b6000610f268263ffffffff1660046115ec565b600061158e823061169b565b5090565b600061159e838361169b565b5090919050565b60006115b383836004611718565b9392505050565b6000826115ce576115cb600061156f565b92505b816115e0576115dd600061156f565b91505b6115b38383600061182f565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b815260009160008051602061205e833981519152916001600160a01b0390911690639cd07acb906116509087908790600401611fee565b6020604051808303816000875af115801561166f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116939190612002565b949350505050565b600060008051602061205e8339815191528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b1580156116fb57600080fd5b505af115801561170f573d6000803e3d6000fd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b815260009160008051602061205e833981519152916001600160a01b039091169063196d0b9b9061178090889033908990899060040161201b565b6020604051808303816000875af115801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612002565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec90604401600060405180830381600087803b15801561180f57600080fd5b505af1158015611823573d6000803e3d6000fd5b50505050509392505050565b60008082156118435750600160f81b611847565b5060005b600060008051602061205e833981519152600181015460405163022f65e760e31b815260048101899052602481018890526001600160f81b0319851660448201529192506001600160a01b03169063117b2f38906064016020604051808303816000875af11580156118bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e19190612002565b9695505050505050565b6040518061010001604052806000815260200160006001600160a01b031681526020016060815260200160608152602001606081526020016060815260200160008152602001600080191681525090565b80356001600160a01b038116811461195357600080fd5b919050565b6000806040838503121561196b57600080fd5b8235915061197b6020840161193c565b90509250929050565b60006020828403121561199657600080fd5b5035919050565b600080604083850312156119b057600080fd5b6119b98361193c565b946020939093013593505050565b60005b838110156119e25781810151838201526020016119ca565b50506000910152565b60008151808452611a038160208601602086016119c7565b601f01601f19169290920160200192915050565b8881526001600160a01b038816602082015261010060408201819052600090611a42908301896119eb565b8281036060840152611a5481896119eb565b90508281036080840152611a6881886119eb565b905082810360a0840152611a7c81876119eb565b60c0840195909552505060e001529695505050505050565b600060208284031215611aa657600080fd5b6115b38261193c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ad657600080fd5b813567ffffffffffffffff811115611af057611af0611aaf565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611b1f57611b1f611aaf565b604052818152838201602001851015611b3757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215611b6a57600080fd5b843567ffffffffffffffff811115611b8157600080fd5b611b8d87828801611ac5565b945050602085013567ffffffffffffffff811115611baa57600080fd5b611bb687828801611ac5565b935050604085013567ffffffffffffffff811115611bd357600080fd5b611bdf87828801611ac5565b925050606085013567ffffffffffffffff811115611bfc57600080fd5b611c0887828801611ac5565b91505092959194509250565b60008060408385031215611c2757600080fd5b50508035926020909101359150565b8051825260006020820151611c5660208501826001600160a01b03169052565b5060408201516101006040850152611c726101008501826119eb565b905060608301518482036060860152611c8b82826119eb565b91505060808301518482036080860152611ca582826119eb565b91505060a083015184820360a0860152611cbf82826119eb565b91505060c083015160c085015260e083015160e08501528091505092915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015611d3957603f19878603018452611d24858351611c36565b94506020938401939190910190600101611d08565b50929695505050505050565b6020815260006115b36020830184611c36565b60008060008060608587031215611d6e57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611d9357600080fd5b8501601f81018713611da457600080fd5b803567ffffffffffffffff811115611dbb57600080fd5b876020828401011115611dcd57600080fd5b949793965060200194505050565b60008251611ded8184602087016119c7565b9190910192915050565b600181811c90821680611e0b57607f821691505b602082108103611e2b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f2657610f26611e31565b600060018201611e6c57611e6c611e31565b5060010190565b601f821115611ebd57806000526020600020601f840160051c81016020851015611e9a5750805b601f840160051c820191505b81811015611eba5760008155600101611ea6565b50505b505050565b815167ffffffffffffffff811115611edc57611edc611aaf565b611ef081611eea8454611df7565b84611e73565b6020601f821160018114611f245760008315611f0c5750848201515b600019600385901b1c1916600184901b178455611eba565b600084815260208120601f198516915b82811015611f545787850151825560209485019460019092019101611f34565b5084821015611f725786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b80820180821115610f2657610f26611e31565b634e487b7160e01b600052603260045260246000fd5b600082611fc757634e487b7160e01b600052601260045260246000fd5b500490565b60548110611fea57634e487b7160e01b600052602160045260246000fd5b9052565b828152604081016115b36020830184611fcc565b60006020828403121561201457600080fd5b5051919050565b8481526001600160a01b0384166020820152608060408201819052600090612045908301856119eb565b90506120546060830184611fcc565b9594505050505056fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a264697066735822122040c20b048c174286bfe6bc469f6388699786b09cd84e34390565f7332343537064736f6c634300081b0033";

type ChildGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChildGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChildGuard__factory extends ContractFactory {
  constructor(...args: ChildGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ChildGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ChildGuard__factory {
    return super.connect(runner) as ChildGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChildGuardInterface {
    return new Interface(_abi) as ChildGuardInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ChildGuard {
    return new Contract(address, _abi, runner) as unknown as ChildGuard;
  }
}
